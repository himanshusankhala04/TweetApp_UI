{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cogdotnet1019\\\\Desktop\\\\Component2\\\\tweetapp_ui\\\\src\\\\components\\\\Reply\\\\Reply.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport TweetAppService from '../../utilities/TweetAppService';\nimport { useAuth } from '../../utilities/Auth';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reply() {\n  _s();\n\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [comments, setComments] = useState();\n  const [commentss, setCommentss] = useState([]);\n  const [Tweets, setTweets] = useState(\"\");\n  const current = new Date();\n  const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;\n  const service = new TweetAppService();\n  const navigate = useNavigate();\n  const data = JSON.parse(localStorage.getItem(\"user-data\"));\n  const dataPoint = JSON.parse(localStorage.getItem(\"tweet\"));\n  const auth = useAuth();\n  const url = \"https://tweetapp120220831221357.azurewebsites.net\";\n  useEffect(() => {\n    async function fetchTweets() {\n      const response = await axios.get(`${url}/api/v1.0/tweets/allcomments/${dataPoint.userName},${dataPoint.tweetId}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"Accept\": \"application/json\"\n        }\n      });\n      console.log(response.data);\n      setCommentss(response.data);\n    }\n\n    fetchTweets();\n  }, [refreshKey]);\n\n  const handleComment = e => {\n    e.preventDefault();\n    let comment = {\n      tweetid: dataPoint.tweetId,\n      comment: comments,\n      username: dataPoint.userName,\n      name: data.username\n    };\n    service.postComment(comment);\n    setComments(old => old = \"\");\n    setTimeout(() => {\n      setRefreshKey(old => old + 1);\n    }, 1000);\n  };\n\n  function fetchTweet() {\n    setTweets(data);\n  }\n\n  function DateTweets(data) {\n    var date = new Date(data); // var current = date.getTime(); \n\n    const date1 = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\n    return date1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"height\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        id: \"color1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-title\",\n            id: \"uname\",\n            children: dataPoint.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), '\\n', /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: DateTweets(dataPoint.tweetDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), '\\n', /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tweetdata card-text\",\n            children: dataPoint.tweets\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            class: \"card-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), '\\n', /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), '\\n']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-outline\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            class: \"form-control\",\n            id: \"textAreaExample1\",\n            rows: \"4\",\n            onChange: e => setComments(e.target.value),\n            value: comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            onClick: handleComment,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), commentss.map((dataP, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-title\",\n            children: dataP.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this), '\\n', /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: [\" replying to @\", dataP.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this), '\\n', /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tweetdata card-text\",\n            children: dataP.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reply, \"Wy5tlr7iQ0LGz/SiSdHBkPjg6ek=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = Reply;\nexport default Reply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reply\");","map":{"version":3,"names":["useState","useEffect","useLocation","useNavigate","TweetAppService","useAuth","axios","Reply","refreshKey","setRefreshKey","comments","setComments","commentss","setCommentss","Tweets","setTweets","current","Date","date","getDate","getMonth","getFullYear","service","navigate","data","JSON","parse","localStorage","getItem","dataPoint","auth","url","fetchTweets","response","get","userName","tweetId","console","log","handleComment","e","preventDefault","comment","tweetid","username","name","postComment","old","setTimeout","fetchTweet","DateTweets","date1","getHours","getMinutes","tweetDate","tweets","target","value","map","dataP","index","firstName"],"sources":["C:/Users/cogdotnet1019/Desktop/Component2/tweetapp_ui/src/components/Reply/Reply.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport TweetAppService from '../../utilities/TweetAppService';\r\nimport { useAuth } from '../../utilities/Auth';\r\nimport axios from 'axios';\r\n\r\nfunction Reply() {\r\n  const [refreshKey,setRefreshKey] = useState(0);\r\n  const [comments,setComments]= useState();\r\n  const [commentss, setCommentss] = useState([]);\r\n  \r\n  const [Tweets,setTweets]= useState(\"\");\r\n  const current= new Date();\r\n  const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\r\n    const service = new TweetAppService();\r\n    const navigate = useNavigate();\r\n    const data = JSON.parse(localStorage.getItem(\"user-data\"));\r\n    const dataPoint = JSON.parse(localStorage.getItem(\"tweet\"));\r\n    const auth = useAuth();\r\n    const url = \"https://tweetapp120220831221357.azurewebsites.net\";\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchTweets() {\r\n        const response = await axios.get(`${url}/api/v1.0/tweets/allcomments/${dataPoint.userName},${dataPoint.tweetId}`, {\r\n          \"method\": \"GET\",\r\n          \"headers\": {\r\n            \"Accept\": \"application/json\",\r\n            \r\n          }\r\n        });\r\n        console.log(response.data);\r\n      setCommentss(response.data);\r\n      }\r\n      fetchTweets();\r\n    }, [refreshKey]);\r\n    \r\n\r\n    const handleComment = (e) =>{\r\n      \r\n      e.preventDefault();\r\n      let comment = {\r\n        tweetid: dataPoint.tweetId,\r\n        comment: comments,\r\n        username: dataPoint.userName,\r\n        name: data.username\r\n      }\r\n      service.postComment(comment);\r\n      \r\n      setComments(old=> old=\"\");\r\n\r\n      setTimeout(()=>{\r\n          \r\n        setRefreshKey(old => old+1);\r\n      },1000);\r\n     \r\n    }\r\n     function fetchTweet() {\r\n      \r\n      setTweets(data);\r\n    }\r\n\r\n    function DateTweets(data) {\r\n      var date = new Date(data); \r\n     // var current = date.getTime(); \r\n      const date1 = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\r\n      return date1;\r\n    }\r\n  return (\r\n    <div className=\"h1\">\r\n      <div className=\"height\">\r\n     <div className=\"card\" id=\"color1\">\r\n       \r\n      <div className=\"tweet card-body\">\r\n        <h6 className=\"card-title\" id=\"uname\">{dataPoint.userName}</h6>\r\n        {'\\n'} \r\n        <p className=\"date\">{DateTweets(dataPoint.tweetDate)}</p>\r\n        {'\\n'} \r\n        <p className=\"tweetdata card-text\">{dataPoint.tweets}</p>\r\n        </div>\r\n      </div>\r\n      </div>\r\n   \r\n     \r\n    \r\n  \r\n\r\n    <div className=\"comp\">\r\n    <div className=\"card\">\r\n        <div className=\"tweet card-body\">\r\n          <h6 class=\"card-title\"></h6>\r\n          {'\\n'} \r\n          <p className=\"date\">{date}</p>\r\n          {'\\n'} \r\n\r\n        \r\n          </div>  \r\n         \r\n          \r\n            \r\n             <div className=\"form-outline\">\r\n             <textarea class=\"form-control\" id=\"textAreaExample1\" rows=\"4\" onChange={e=>setComments(e.target.value)} value={comments}></textarea>\r\n             \r\n             <br/>\r\n             <button type=\"button\" class=\"btn btn-primary\" onClick={handleComment}>Submit</button>\r\n            </div>       \r\n            \r\n             \r\n        \r\n    </div>\r\n\r\n    {commentss.map((dataP, index) => (\r\n    <div className=\"card\" key={index}>\r\n\r\n      <div className=\"tweet card-body\">\r\n        <h6 className=\"card-title\">{dataP.firstName}</h6>\r\n        {'\\n'} \r\n        <p className=\"date\"> replying to @{dataP.username}</p>\r\n        {'\\n'} \r\n        <p className=\"tweetdata card-text\">{dataP.comments}</p>\r\n        </div>\r\n\r\n    </div>))}\r\n   \r\n\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reply"],"mappings":"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"},"metadata":{},"sourceType":"module"}